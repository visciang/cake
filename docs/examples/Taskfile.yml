version: "3"

.sources_deps: &sources_deps
  - "Taskfile.yml"
  - "mix.lock"
  - "mix.exs"

.sources_compile: &sources_compile
  - "Taskfile.yml"
  - "mix.lock"
  - "mix.exs"
  - "config/**/*.exs"
  - "lib/**/*.ex"
  - "priv/**/*.ex"
  - "priv/**/*.exs"

.sources_test: &sources_test
  - "Taskfile.yml"
  - "mix.lock"
  - "mix.exs"
  - "config/**/*.exs"
  - "lib/**/*.ex"
  - "priv/**/*.ex"
  - "priv/**/*.exs"
  - "test/**/*.ex"
  - "test/**/*.exs"

run: when_changed

tasks:
  default:
    deps:
      - format_check
      - dialyzer
      - exunit

  deps.get:
    desc: fetch dependencies
    vars:
      GENERATE_FLAG_FILE: .task/{{.TASK}}.generated
    cmds:
      - mix deps.get
      - mix deps.unlock --check-unused
      - touch {{.GENERATE_FLAG_FILE}}
    sources: *sources_deps
    generates:
      - "{{.GENERATE_FLAG_FILE}}"

  deps.compile:
    desc: compile dependencies
    vars:
      GENERATE_FLAG_FILE: .task/{{.TASK}}.{{.MIX_ENV}}.generated
      MIX_ENV: '{{.MIX_ENV | default "dev"}}'
    requires:
      vars: [MIX_ENV]
    env:
      MIX_ENV: "{{.MIX_ENV}}"
    cmds:
      - mix deps.compile
      - touch {{.GENERATE_FLAG_FILE}}
    deps:
      - deps.get
    sources: *sources_deps
    generates:
      - "{{.GENERATE_FLAG_FILE}}"

  deps.compile.dev:
    internal: true
    cmds:
      - task: deps.compile
        vars: { MIX_ENV: dev }

  deps.compile.test:
    internal: true
    cmds:
      - task: deps.compile
        vars: { MIX_ENV: test }

  compile:
    desc: compile
    vars:
      GENERATE_FLAG_FILE: .task/{{.TASK}}.{{.MIX_ENV}}.generated
      MIX_ENV: '{{.MIX_ENV | default "dev"}}'
    requires:
      vars: [MIX_ENV]
    env:
      MIX_ENV: "{{.MIX_ENV}}"
    cmds:
      - mix compile --warnings-as-errors
      - touch {{.GENERATE_FLAG_FILE}}
    deps:
      - deps.compile.{{.MIX_ENV}}
    sources: *sources_compile
    generates:
      - "{{.GENERATE_FLAG_FILE}}"

  compile.dev:
    internal: true
    cmds:
      - task: compile
        vars: { MIX_ENV: dev }

  compile.test:
    internal: true
    cmds:
      - task: compile
        vars: { MIX_ENV: test }

  dialyzer_plt:
    internal: true
    cmds:
      - mix dialyzer --plt
    deps:
      - compile.dev
    sources: *sources_compile
    generates:
      - "_build/dev/*.plt.hash"

  format_check:
    desc: check formatting
    vars:
      GENERATE_FLAG_FILE: .task/{{.TASK}}.generated
    cmds:
      - rm -f {{.GENERATE_FLAG_FILE}}
      - mix format --check-formatted
      - touch {{.GENERATE_FLAG_FILE}}
    deps:
      - deps.get
    sources: *sources_test
    generates:
      - "{{.GENERATE_FLAG_FILE}}"

  dialyzer:
    desc: dialyzer
    vars:
      GENERATE_FLAG_FILE: .task/{{.TASK}}.generated
    cmds:
      - mix dialyzer --no-check
      - touch {{.GENERATE_FLAG_FILE}}
    deps:
      - dialyzer_plt
    sources: *sources_compile
    generates:
      - "{{.GENERATE_FLAG_FILE}}"

  exunit:
    desc: runs exunit test
    cmds:
      - mix test
    deps:
      - compile.test
