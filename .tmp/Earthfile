VERSION 0.7

ARG --global ELIXIR_VERSION="1.15.4"
ARG --global ERLANG_VERSION="26.0.2"
ARG --global ALPINE_VERSION="3.18.2"

all:
    ARG ELIXIR_DIALYZER="true"
    ARG ELIXIR_CREDO="true"
    ARG ELIXIR_TEST="true"
    ARG ELIXIR_DOCS="true"

    FROM busybox

    IF [ "$ELIXIR_DIALYZER" = "true" ]
        BUILD +dialyzer
    END
    IF [ "$ELIXIR_CREDO" = "true" ]
        BUILD +credo
    END
    IF [ "$ELIXIR_TEST" = "true" ]
        BUILD +test
    END
    IF [ "$ELIXIR_DOCS" = "true" ]
        BUILD +docs
    END
    BUILD +format

toolchain:
    FROM hexpm/elixir:${ELIXIR_VERSION}-erlang-${ERLANG_VERSION}-alpine-${ALPINE_VERSION}
    RUN apk add --no-cache git build-base
    RUN mix local.rebar --force && \
        mix local.hex --force

deps:
    ARG MIX_ENV="dev"

    FROM +toolchain
    WORKDIR /code
    COPY mix.exs mix.lock ./
    RUN --ssh mix deps.get
    RUN mix deps.get --check-unused
    RUN MIX_ENV=${MIX_ENV} mix deps.compile

compile:
    ARG MIX_ENV="dev"

    FROM +deps --MIX_ENV=${MIX_ENV}
    COPY --if-exists --dir config lib priv test .*.exs ./
    RUN MIX_ENV=${MIX_ENV} mix compile --warnings-as-errors

dialyzer-plt:
    FROM +deps
    RUN mix dialyzer --plt
    SAVE ARTIFACT _build/dev/dialyxir_*.plt*

dialyzer:
    FROM +compile
    COPY +dialyzer-plt/dialyxir_*.plt* ./_build/dev/
    RUN mix dialyzer --no-check

format:
    FROM +compile
    RUN mix format --check-formatted

credo:
    ARG ELIXIR_CREDO_OPTS="--strict --all"

    FROM +compile
    RUN mix credo ${ELIXIR_CREDO_OPTS}

test:
    ARG ELIXIR_TEST_CMD="coveralls.html"

    FROM +compile --MIX_ENV=test
    RUN mix ${ELIXIR_TEST_CMD}
    SAVE ARTIFACT cover AS LOCAL cover

docs:
    FROM +compile
    COPY README.md ./
    RUN mix docs --formatter=html
    SAVE ARTIFACT doc AS LOCAL doc